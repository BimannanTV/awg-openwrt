#!/usr/bin/env bash

# Цветовые коды
_red() { printf '\033[0;31m%b\033[0m' "$1"; }
_green() { printf '\033[0;32m%b\033[0m' "$1"; }
_yellow() { printf '\033[0;33m%b\033[0m' "$1"; }
_blue() { printf '\033[0;36m%b\033[0m' "$1"; }

# Проверка наличия команды
_exists() { command -v "$1" >/dev/null 2>&1; }

# Установка speedtest-cli
install_speedtest() {
    if [ ! -e "./speedtest-cli/speedtest" ]; then
        _yellow "Устанавливаю speedtest-cli...\n"
        sys_bit=""
        local sysarch=$(uname -m)
        case "$sysarch" in
            x86_64) sys_bit="x86_64" ;;
            aarch64|arm64) sys_bit="aarch64" ;;
            armhf|armv7*) sys_bit="armhf" ;;
            *) 
                _red "Ошибка: Неподдерживаемая архитектура ($sysarch)\n" 
                exit 1
                ;;
        esac
        
        url1="https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-${sys_bit}.tgz" 
        url2="https://dl.lamp.sh/files/ookla-speedtest-1.2.0-linux-${sys_bit}.tgz" 
        
        if ! wget --no-check-certificate -q -O speedtest.tgz "$url1"; then
            if ! wget --no-check-certificate -q -O speedtest.tgz "$url2"; then
                _red "Ошибка: Не удалось скачать speedtest-cli\n"
                exit 1
            fi
        fi
        
        mkdir -p speedtest-cli && tar zxf speedtest.tgz -C ./speedtest-cli && chmod +x ./speedtest-cli/speedtest
        rm -f speedtest.tgz
    fi
    
    printf "%-18s%-18s%-20s%-12s\n" " Node Name" "Upload" "Download" "Latency"
}

# Тестирование скорости
speed_test() {
    local server_id="$1"
    local node_name="$2"
    
    if [ -z "$server_id" ]; then
        ./speedtest-cli/speedtest --progress=no --accept-license --accept-gdpr > speedtest.log 2>&1
    else
        ./speedtest-cli/speedtest --progress=no --server-id="$server_id" --accept-license --accept-gdpr > speedtest.log 2>&1
    fi
    
    if [ $? -eq 0 ]; then
        local dl=$(awk '/Download/{print $3" "$4}' speedtest.log)
        local up=$(awk '/Upload/{print $3" "$4}' speedtest.log)
        local lat=$(awk '/Latency/{print $3" "$4}' speedtest.log)
        
        printf "\033[0;33m%-18s\033[0;32m%-18s\033[0;31m%-20s\033[0;36m%-12s\033[0m\n" \
            " $node_name" "$up" "$dl" "$lat"
    else
        _red "Ошибка: Тест не выполнен\n"
    fi
}

# Стандартные серверы
run_standard_tests() {
    _green "Запуск тестов со стандартными серверами:\n"
    speed_test '' 'Speedtest.net'
    speed_test "Beeline, Moscow|4718"
    speed_test "Beeline, Kaluga|4744"
    speed_test "Beeline, Sochi|6210"
    speed_test "Beeline, Nvsb|5045"
    speed_test "Beeline, Ekat|6400"
    speed_test "MTS, Moscow|10600"
    speed_test "MTS, Moscow|1907"
    speed_test "MTS, Spb|1905"
    speed_test "MTS, Spb|4247"
    speed_test "MTS, Nvsb|3868"
    speed_test "MTS, Ekat|4908"
    speed_test "MTS, Vladiv|1903"
    speed_test "Tele2, Moscow|6562"
    speed_test "Tele2, Spb|20477"
    speed_test "Tele2, Spb|6051"
    speed_test "Tele2, Ekat|6616"
    speed_test "Tele2, Nvsb|6430"
    speed_test "Tele2, Rostov|6429"
    speed_test "Megafon, Moscow|6386"
    speed_test "Megafon, Spb|6385"
    speed_test "Megafon, Ekat|6437"
    speed_test "Megafon, Nvsb|6389"
    speed_test "MGTS, Moscow|6827"
    speed_test "Rostel, Moscow|3682"
    speed_test "Rostel, Spb|2599"
    speed_test "Rostel, Ekat|21011"
    speed_test "Rostel, Nvsb|3296"
    speed_test "dom.ru, Moscow|14190"
    speed_test "Rostel, Spb|2690"
    speed_test "Rostel, Nvsb|2696"
    speed_test "Rostel, Ekat|5844"
    speed_test "Realnet, Simf|20019"
    speed_test "Crimea, Simf|6918"
    speed_test "Crimea, Simf|7436"
    speed_test "Crimea, Simf|2477"
    speed_test "Crimea, Sevas|7486"
    speed_test "ETL, Mytish|4952"
}

# Обработка сигналов
trap 'rm -f speedtest.log; exit 1' INT QUIT TERM

# Основная логика
clear
install_speedtest

if [ $# -ge 1 ]; then
    # Ручной режим через параметры командной строки
    server_id="$1"
    if [ "$server_id" = "0" ]; then
        _green "Выход без теста\n"
        exit 0
    fi
    _green "Запуск теста с сервером ID: $server_id\n"
    speed_test "$server_id" "Custom Server"
else
    # Стандартные тесты по умолчанию
    run_standard_tests
fi

# Удаление только временных файлов
rm -f speedtest.log benchtest_*
